{"version":3,"sources":["components/shared/DisplayCard.js","components/home/Counter.js","hooks/useOutsideAlerter.js","components/home/Square.js","components/home/JumpModal.js","logic/playerTips.js","components/home/Board.js","components/home/Players.js","components/home/Pieces.js","components/home/PiecesTaken.js","components/home/ResultModal.js","components/home/Home.js","components/howToPlay/HowToPlay.js","components/shared/ProjectCard.js","components/about/About.js","components/shared/App.js","index.js"],"names":["DisplayCard","props","Card","Header","title","Body","innerComponent","Counter","ref","useRef","useState","visible","setVisible","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutsideAlerter","player1Css","player2Css","state","height","y","width","x","setCounterToMove","click","className","onClick","Square","style","setSquareToMoveTo","ResultModal","handleClose","update","Modal","show","onHide","closeButton","Title","Footer","Button","variant","setJumpModalValue","result","checkMoveUp","board","i","j","push","checkMoveDown","checkTakeUp","playerToTake","includes","checkTakeDown","findPlayerMoves","tipFor","length","piece","list","newList","forEach","element","counter","element2","removeDuplicates","Board","counters","setCounters","counterToMove","squareToMoveTo","showTips","setShowTips","tipButtonText","renderSquares","squares","setSquares","showJumpModal","setShowJumpModal","JumpModalValue","map","row","index","moveCounter","kingMeCheck","setTurn","turn","takeCounter","res","res2","setPlayer1Counter","player1Counter","setPlayer2Counter","player2Counter","clearTips","checkToJumpUpAgain","value","checkToJumpDownAgain","checkMoveCounter","checkTakeCounter","player1Moves","concat","player2Moves","setResultsModalTitle","setResultsModalMessage","setShowResultModal","noOneCanMoveCheck","canTake","ButtonToolbar","ButtonGroup","Players","Row","Pieces","PiecesTaken","message","window","location","reload","Home","showResultModal","resultsModalTitle","resultsModalMessage","Col","xl","HowToPlay","Container","fluid","ProjectCard","features","feature","Text","Alert","colour","status","About","href","App","Jumbotron","data-testid","to","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9df8a61e.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function DisplayCard(props) {\n\n    return (\n        <div>\n            <Card>\n                <Card.Header><h2>{props.title}</h2></Card.Header>\n                <Card.Body>\n                    {props.innerComponent}\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}","import '../../style/Counter.css';\nimport { useOutsideAlerter } from '../../hooks/useOutsideAlerter';\n\nexport default function Counter(props) {\n    const { visible, ref } = useOutsideAlerter();\n\n    let player1Css = visible ? \"circle red center yellow\" : \"circle red center\";\n    let player2Css = visible ? \"circle blue center yellow\" : \"circle blue center\";\n\n    const state = props.state;\n    const height = props.y;\n    const width = props.x\n    const setCounterToMove = props.setCounterToMove;\n\n    function click() {\n        setCounterToMove({ state: state, height: height, width: width });\n    }\n\n    if (props.state === 1) {\n        return (\n            <div ref={ref} className={player1Css} onClick={click}></div>\n        )\n    }\n    else if (props.state === 2) {\n        return (\n            <div ref={ref} className={player2Css}onClick={click}></div>\n        )\n    }\n    else if (props.state === 3) {\n        return (\n            <div ref={ref} className={player1Css} onClick={click}>K</div>\n        )\n    }\n    else if (props.state === 4) {\n        return (\n            <div ref={ref} className={player2Css} onClick={click}>K</div>\n        )\n    }\n    else {\n        return (\n            <div></div>\n        )\n    }\n}","import { useState, useRef, useEffect } from \"react\";\n\nexport { useOutsideAlerter }\n\nfunction useOutsideAlerter() {\n    const ref = useRef(null);\n    const [visible, setVisible] = useState(false);\n\n    function handleClickOutside(event) {\n        //Only set visible as true if you have clicked the counter else false\n        if (ref.current && ref.current.contains(event.target)) {\n            setVisible(true);\n        }\n        else{\n            setVisible(false);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside, true);\n        return () => {\n            //Tidy up\n            document.removeEventListener(\"mousedown\", handleClickOutside, true);\n        };\n    }, [ref]);\n\n    return { visible, ref }\n}","import Counter from './Counter';\nimport '../../style/Square.css';\n\nexport default function Square(props) {\n    const state = props.state;\n    const style = state === 6 ? \"square tip\" : state !== 0 ? \"square black\" : \"square\";\n    const height = props.y;\n    const width = props.x;\n    const setSquareToMoveTo = props.setSquareToMoveTo;\n\n    function click() {\n        if (state === 5 || state === 6) {\n            setSquareToMoveTo({ height: height, width: width });\n        }\n    }\n\n    return (\n        <div className={style} onClick={click}>\n            <Counter state={state} y={height} x={width} setCounterToMove={props.setCounterToMove}></Counter>\n        </div>\n    )\n}","import React from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function ResultModal(props) {\n    const handleClose = () => props.update(false);\n\n    const handleYes = () => {\n        props.setJumpModalValue(true);\n        handleClose();\n    }\n\n    return (\n        <div>\n            <Modal show={props.show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Would you like to take again?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>In draughts players can jump multiple times to take multiple pieces from their opponent.</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleYes}>Yes</Button>\n                    <Button variant=\"primary\" onClick={handleClose}>No</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}","export { findPlayerMoves }\n\nlet result = [];\n\nfunction checkMoveUp(board, i, j) {\n    try {\n        //Check left side\n        if (board[i - 1][j - 1] === 5 || board[i - 1][j - 1] === 6) {\n            result.push({ height: i - 1, width: j - 1 });\n        }\n\n        //Check right side\n        if (board[i - 1][j + 1] === 5 || board[i - 1][j + 1] === 6) {\n            result.push({ height: i - 1, width: j + 1 });\n        }\n    }\n    catch { }\n}\n\nfunction checkMoveDown(board, i, j) {\n    try {\n        //Check left side\n        if (board[i + 1][j - 1] === 5 || board[i + 1][j - 1] === 6) {\n            result.push({ height: i + 1, width: j - 1 });\n        }\n\n        //Check right side\n        if (board[i + 1][j + 1] === 5 || board[i + 1][j + 1] === 6) {\n            result.push({ height: i + 1, width: j + 1 });\n        }\n    }\n    catch { }\n}\n\nfunction checkTakeUp(board, i, j, playerToTake) {\n    try {\n        //left\n        if (playerToTake.includes(board[i - 1][j - 1])) {\n            if (board[i - 2][j - 2] === 5 || board[i - 2][j - 2] === 6) {\n                result.push({ height: i - 2, width: j - 2 });\n                checkTakeUp(board, i - 2, j - 2, playerToTake)\n            }\n        }\n\n        //Right\n        if (playerToTake.includes(board[i - 1][j + 1])) {\n            if (board[i - 2][j + 2] === 5 || board[i - 2][j + 2] === 6) {\n                result.push({ height: i - 2, width: j + 2 });\n                checkTakeUp(board, i - 2, j + 2, playerToTake)\n            }\n        }\n    }\n    catch { }\n}\n\nfunction checkTakeDown(board, i, j, playerToTake) {\n    try {\n        //left\n        if (playerToTake.includes(board[i + 1][j - 1])) {\n            if (board[i + 2][j - 2] === 5 || board[i + 2][j - 2] === 6) {\n                result.push({ height: i + 2, width: j - 2 });\n                checkTakeDown(board, i + 2, j - 2, playerToTake)\n            }\n        }\n\n        //Right\n        if (playerToTake.includes(board[i + 1][j + 1])) {\n            if (board[i + 2][j + 2] === 5 || board[i + 2][j + 2] === 6) {\n                result.push({ height: i + 2, width: j + 2 });\n                checkTakeDown(board, i + 2, j + 2, playerToTake)\n            }\n        }\n    }\n    catch { }\n}\n\nfunction removeDuplicates(list) {\n    let newList = [];\n\n    list.forEach(element => {\n        if (newList.length === 0) {\n            newList.push(element);\n        }\n        else {\n            let counter = 0;\n            newList.forEach(element2 => {\n                if (element.height === element2.height && element.width === element2.width) {\n                    counter++;\n                }\n            });\n\n            if (counter === 0) {\n                newList.push(element);\n            }\n        }\n    });\n\n    return newList;\n}\n\nfunction findPlayerMoves(board, tipFor) {\n    result = [];\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n            let piece = board[i][j]\n            if (piece === tipFor) {\n                if (piece === 1) {\n                    checkMoveUp(board, i, j);\n                    checkTakeUp(board, i, j, [2])\n                }\n                else if (piece === 2) {\n                    checkMoveDown(board, i, j);\n                    checkTakeDown(board, i, j, [1]);\n                }\n                else if (piece === 3) {\n                    checkMoveUp(board, i, j);\n                    checkMoveDown(board, i, j);\n                    checkTakeUp(board, i, j, [2, 4])\n                    checkTakeDown(board, i, j, [2, 4]);\n                }\n                else if (piece === 4) {\n                    checkMoveUp(board, i, j);\n                    checkMoveDown(board, i, j);\n                    checkTakeUp(board, i, j, [1, 3])\n                    checkTakeDown(board, i, j, [1, 3]);\n                }\n            }\n        }\n    }\n\n    return removeDuplicates(result);\n}\n","import React, { useState, useEffect } from \"react\";\nimport Square from './Square';\nimport JumpModal from './JumpModal';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport '../../style/Board.css';\nimport { findPlayerMoves } from '../../logic/playerTips';\n\nexport default function Board(props) {\n    //0 - Counter is never there\n    //1 - Player 1 Counter \n    //2 - Player 2 Counter\n    //3 - Player 1 King Counter\n    //4 - Player 2 King Counter\n    //5 - Playable space\n    //6 - Show player tip\n    const start = [\n        [2, 0, 2, 0, 2, 0, 2, 0],\n        [0, 2, 0, 2, 0, 2, 0, 2],\n        [2, 0, 2, 0, 2, 0, 2, 0],\n        [0, 5, 0, 5, 0, 5, 0, 5],\n        [5, 0, 5, 0, 5, 0, 5, 0],\n        [0, 1, 0, 1, 0, 1, 0, 1],\n        [1, 0, 1, 0, 1, 0, 1, 0],\n        [0, 1, 0, 1, 0, 1, 0, 1],\n    ]\n    const [counters, setCounters] = useState(start);\n\n    const [counterToMove, setCounterToMove] = useState(null);\n    const [squareToMoveTo, setSquareToMoveTo] = useState(null);\n\n    const [showTips, setShowTips] = useState(true);\n    let tipButtonText = showTips ? \"Show player tips\" : \"Hide player tips\";\n\n    const [squares, setSquares] = useState(renderSquares());\n\n    const [showJumpModal, setShowJumpModal] = useState(false);\n    const [JumpModalValue, setJumpModalValue] = useState(false);\n\n    function renderSquares() {\n        return counters.map((row, index) => {\n            let y = index;\n            return (\n                <tr key={y}>\n                    {\n                        row.map((piece, index) => <td key={y + index} className=\"p-0\"><Square state={piece} y={y} x={index} setSquareToMoveTo={setSquareToMoveTo} setCounterToMove={setCounterToMove}></Square></td>)\n                    }\n                </tr>\n            )\n        })\n    }\n\n    function moveCounter() {\n        counters[counterToMove.height][counterToMove.width] = 5;\n        counters[squareToMoveTo.height][squareToMoveTo.width] = counterToMove.state;\n\n        kingMeCheck();\n        setCounters(counters);\n        setSquares(renderSquares());\n        props.setTurn(!props.turn);\n    }\n\n    function takeCounter(res, res2) {\n        counters[counterToMove.height][counterToMove.width] = 5;\n        counters[squareToMoveTo.height][squareToMoveTo.width] = counterToMove.state;\n\n        if (counters[res][res2] === 1 || counters[res][res2] === 3) {\n            props.setPlayer1Counter(props.player1Counter + 1);\n        }\n        else if (counters[res][res2] === 2 || counters[res][res2] === 4) {\n            props.setPlayer2Counter(props.player2Counter + 1);\n        }\n\n        counters[res][res2] = 5;\n\n        kingMeCheck();\n        setCounters(counters);\n        setSquares(renderSquares());\n        props.setTurn(!props.turn);\n    }\n\n    function kingMeCheck() {\n        //Player 1 check\n        if (counterToMove.state === 1) {\n            if (squareToMoveTo.height === 0) {\n                counters[squareToMoveTo.height][squareToMoveTo.width] = 3;\n            }\n        }\n        //Player 2 check\n        else if (counterToMove.state === 2) {\n            if (squareToMoveTo.height === 7) {\n                counters[squareToMoveTo.height][squareToMoveTo.width] = 4;\n            }\n        }\n    }\n\n    function clearTips() {\n        for (let i = 0; i < counters.length; i++) {\n            for (let j = 0; j < counters[i].length; j++) {\n                if (counters[i][j] === 6) {\n                    counters[i][j] = 5;\n                }\n            }\n        }\n\n        setCounters(counters);\n        setSquares(renderSquares());\n    }\n\n    function displayTips() {\n        if (props.turn === true) {\n            let res = findPlayerMoves(counters, 1).concat(findPlayerMoves(counters, 3));\n            res.forEach(element => {\n                counters[element.height][element.width] = 6;\n            });\n        }\n        else if (props.turn === false) {\n            let res = findPlayerMoves(counters, 2).concat(findPlayerMoves(counters, 4));\n            res.forEach(element => {\n                counters[element.height][element.width] = 6;\n            });\n        }\n    }\n\n    function showPlayerTips() {\n        if (showTips) {\n            displayTips();\n            setShowTips(false);\n        }\n        else {\n            clearTips();\n            setShowTips(true);\n        }\n\n        setCounters(counters);\n        setSquares(renderSquares());\n    }\n\n    function noOneCanMoveCheck() {\n        let player1Moves = findPlayerMoves(counters, 1).concat(findPlayerMoves(counters, 3));\n        let player2Moves = findPlayerMoves(counters, 2).concat(findPlayerMoves(counters, 4));\n\n        if (player1Moves.length === 0 && player2Moves.length === 0) {\n            props.setResultsModalTitle(\"Tied game\");\n            props.setResultsModalMessage(\"No player can move. Therefore the game ends in a tie. I hope you had fun playing.\");\n            props.setShowResultModal(true);\n        } else if (player1Moves.length === 0) {\n            props.setResultsModalTitle(\"Player 2 wins\");\n            props.setResultsModalMessage(\"Player 1 can no longer move. Player 2 wins. I hope you had fun playing.\");\n            props.setShowResultModal(true);\n        } else if (player2Moves.length === 0) {\n            props.setResultsModalTitle(\"Player 1 wins\");\n            props.setResultsModalMessage(\"Player 2 can no longer move. Player 1 wins. I hope you had fun playing.\");\n            props.setShowResultModal(true);\n        }\n    }\n\n    function checkToJumpUpAgain(value) {\n        try {\n            //left\n            if (counters[squareToMoveTo.height - 1][squareToMoveTo.width - 1] === value) {\n                if (counters[squareToMoveTo.height - 2][squareToMoveTo.width - 2] === 5 || counters[squareToMoveTo.height - 2][squareToMoveTo.width - 2] === 6) {\n                    return true;\n                }\n            }\n\n            //Right\n            if (counters[squareToMoveTo.height - 1][squareToMoveTo.width + 1] === value) {\n                if (counters[squareToMoveTo.height - 2][squareToMoveTo.width + 2] === 5 || counters[squareToMoveTo.height - 2][squareToMoveTo.width + 2] === 6) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n        catch {\n            return false;\n        }\n    }\n\n    function checkToJumpDownAgain(value) {\n        try {\n            //left\n            if (counters[squareToMoveTo.height + 1][squareToMoveTo.width - 1] === value) {\n                if (counters[squareToMoveTo.height + 2][squareToMoveTo.width - 2] === 5 || counters[squareToMoveTo.height + 2][squareToMoveTo.width - 2] === 6) {\n                    return true;\n                }\n            }\n\n            //Right\n            if (counters[squareToMoveTo.height + 1][squareToMoveTo.width + 1] === value) {\n                if (counters[squareToMoveTo.height + 2][squareToMoveTo.width + 2] === 5 || counters[squareToMoveTo.height + 2][squareToMoveTo.width + 2] === 6) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n        catch {\n            return false;\n        }\n    }\n\n    function checkMoveCounter(value) {\n        if (counterToMove.height + value === squareToMoveTo.height) {\n            if (counterToMove.width - 1 === squareToMoveTo.width || counterToMove.width + 1 === squareToMoveTo.width) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function checkTakeCounter(value, playerToTake) {\n        if (counterToMove.height + value === squareToMoveTo.height) {\n            if (counterToMove.width - 2 === squareToMoveTo.width || counterToMove.width + 2 === squareToMoveTo.width) {\n                let res = (squareToMoveTo.height + counterToMove.height) / 2;\n                let res2 = (squareToMoveTo.width + counterToMove.width) / 2\n                if (counters[res][res2] === playerToTake) {\n                    return {\n                        result: true,\n                        height: res,\n                        width: res2\n                    }\n                }\n            }\n        }\n\n        return {\n            result: false\n        }\n    }\n\n    useEffect(() => {\n        noOneCanMoveCheck();\n        if (counterToMove != null && squareToMoveTo != null) {\n            //Player1 \n            if (props.turn === true) {\n                if (counterToMove.state === 1) {\n                    if (checkMoveCounter(-1)) {\n                        moveCounter();\n                    }\n                    let canTake = checkTakeCounter(-2, 2);\n                    if (canTake.result) {\n                        takeCounter(canTake.height, canTake.width);\n                        if (checkToJumpUpAgain(2)) {\n                            setShowJumpModal(true);\n                        }\n                    }\n                }\n            }\n            //Player 2\n            if (props.turn === false) {\n                if (counterToMove.state === 2) {\n                    if (checkMoveCounter(1)) {\n                        moveCounter();\n                    }\n                    let canTake = checkTakeCounter(2, 1);\n                    if (canTake.result) {\n                        takeCounter(canTake.height, canTake.width);\n                        if (checkToJumpUpAgain(1)) {\n                            setShowJumpModal(true);\n                        }\n                    }\n                }\n            }\n            //Player 1 or 2 king\n            if (counterToMove.state === 3 || counterToMove.state === 4) {\n                if (counterToMove.height - 1 === squareToMoveTo.height || counterToMove.height + 1 === squareToMoveTo.height) {\n                    if (counterToMove.width - 1 === squareToMoveTo.width || counterToMove.width + 1 === squareToMoveTo.width) {\n                        if ((counterToMove.state === 3 && props.turn === true) || (counterToMove.state === 4 && props.turn === false)) {\n                            moveCounter();\n                        }\n                    }\n                }\n                else if (counterToMove.height - 2 === squareToMoveTo.height || counterToMove.height + 2 === squareToMoveTo.height) {\n                    if (counterToMove.width - 2 === squareToMoveTo.width || counterToMove.width + 2 === squareToMoveTo.width) {\n                        let res = (squareToMoveTo.height + counterToMove.height) / 2;\n                        let res2 = (squareToMoveTo.width + counterToMove.width) / 2;\n                        //Player 1 king takes player 2\n                        if (props.turn === true) {\n                            if (counterToMove.state === 3 && (counters[res][res2] === 2 || counters[res][res2] === 4)) {\n                                takeCounter(res, res2);\n                                if (checkToJumpUpAgain(2) || checkToJumpUpAgain(4) || checkToJumpDownAgain(2) || checkToJumpDownAgain(4)) {\n                                    setShowJumpModal(true);\n                                }\n                            }\n                        }\n                        //Player 2 king takes player 1\n                        else if (props.turn === false) {\n                            if (counterToMove.state === 4 && (counters[res][res2] === 1 || counters[res][res2] === 3)) {\n                                takeCounter(res, res2);\n                                if (checkToJumpUpAgain(1) || checkToJumpUpAgain(3) || checkToJumpDownAgain(1) || checkToJumpDownAgain(3)) {\n                                    setShowJumpModal(true);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            clearTips();\n            setShowTips(true);\n            setCounterToMove(null);\n            setSquareToMoveTo(null);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [squareToMoveTo, counterToMove, counters])\n\n    useEffect(() => {\n        if (JumpModalValue) {\n            props.setTurn(!props.turn);\n            setJumpModalValue(false);\n        }\n    }, [JumpModalValue, props])\n\n    return (\n        <div className=\"container fluid\">\n            <ButtonToolbar className=\"d-flex justify-content-center\">\n                <ButtonGroup className=\"ml-2 mr-2 mb-4\">\n                    <Button onClick={showPlayerTips}>{tipButtonText}</Button>\n                </ButtonGroup>\n            </ButtonToolbar>\n\n            <JumpModal show={showJumpModal} update={setShowJumpModal} setJumpModalValue={setJumpModalValue} />\n\n            <div className=\"d-flex justify-content-center\">\n                <table className=\"gameBorder\">\n                    <tbody className=\"border border-dark\">\n                        {squares}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../style/Counter.css';\n\nexport default function Players(props) {\n    return (\n        <div>\n            <Row className=\"p-3\">\n                <div className={\"circle red center\" + (props.turn === true ? \" yellow\" : \"\")}></div>\n                <h3 className=\"p-4\">Player 1</h3>\n            </Row>\n            <br></br>\n            <Row className=\"p-3\">\n                <div className={\"circle blue center\" + (props.turn === false ? \" yellow\" : \"\")}></div>\n                <h3 className=\"p-4\">Player 2</h3>\n            </Row>\n        </div>\n    )\n}","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../style/Counter.css';\n\nexport default function Pieces(props) {\n    return (\n        <div>\n            <Row className=\"p-3\">\n                <div className=\"circle red center\"></div>\n                <h3 className=\"p-4\">Single</h3>\n            </Row>\n            <br></br>\n            <Row className=\"p-3\">\n                <div className=\"circle red center\">K</div>\n                <h3 className=\"p-4\">King</h3>\n            </Row>\n        </div>\n    )\n}","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../style/Counter.css';\n\nexport default function PiecesTaken(props) {\n    return (\n        <div>\n            <Row className=\"p-3\">\n                <div className=\"circle red center\"></div>\n                <h3 className=\"m-0 p-4\">{props.player1Counter}</h3>\n            </Row>\n            <br></br>\n            <Row className=\"p-3\">\n                <div className=\"circle blue center\"></div>\n                <h3 className=\"p-4\">{props.player2Counter}</h3>\n            </Row>\n        </div>\n    )\n}","import React from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function ResultModal(props) {\n    const handleClose = () => props.update(false);\n\n    const handleRestart = () => window.location.reload();;\n\n    return (\n        <div>\n            <Modal show={props.show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{props.message}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={handleRestart}>\n                        Restart\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DisplayCard from '../shared/DisplayCard';\nimport Board from './Board';\nimport Players from '../home/Players';\nimport Pieces from '../home/Pieces';\nimport PiecesTaken from '../home/PiecesTaken';\nimport ResultModal from '../home/ResultModal';\n\nexport default function Home(props) {\n    const [player1Counter, setPlayer1Counter] = useState(0);\n    const [player2Counter, setPlayer2Counter] = useState(0);\n\n    const [showResultModal, setShowResultModal] = useState(false);\n    const [resultsModalTitle, setResultsModalTitle] = useState(\"\");\n    const [resultsModalMessage, setResultsModalMessage] = useState(\"\");\n\n    //Player 1 - true\n    //Player 2 - false\n    const [turn, setTurn] = useState(true)\n\n    useEffect(() => {\n        if (player1Counter === 12) {\n            setResultsModalTitle(\"Player 2 wins\");\n            setResultsModalMessage(\"Well done on finishing the game of draughts. I hope you had fun playing.\");\n            setShowResultModal(true);\n        }\n        else if (player2Counter === 12) {\n            setResultsModalTitle(\"Player 1 wins\");\n            setResultsModalMessage(\"Well done on finishing the game of draughts. I hope you had fun playing.\");\n            setShowResultModal(true);\n        }\n\n    }, [player1Counter, player2Counter])\n\n    return (\n        <Row>\n            <ResultModal show={showResultModal} update={setShowResultModal} title={resultsModalTitle} message={resultsModalMessage}></ResultModal>\n            <Col xl=\"1\"></Col>\n            <Col xl=\"7\">\n                <Board player1Counter={player1Counter} setPlayer1Counter={setPlayer1Counter} player2Counter={player2Counter} setPlayer2Counter={setPlayer2Counter} turn={turn} setTurn={setTurn} setResultsModalTitle={setResultsModalTitle} setShowResultModal={setShowResultModal} setResultsModalMessage={setResultsModalMessage}></Board>\n                <br></br>\n            </Col>\n            <Col xl=\"3\">\n                <DisplayCard title=\"Players\" innerComponent={<Players turn={turn}></Players>}></DisplayCard>\n                <br></br>\n                <DisplayCard title=\"Pieces\" innerComponent={<Pieces></Pieces>}></DisplayCard>\n                <br></br>\n                <DisplayCard title=\"Pieces Taken\" innerComponent={<PiecesTaken player1Counter={player1Counter} player2Counter={player2Counter}></PiecesTaken>}></DisplayCard>\n                <br></br>\n            </Col>\n            <Col xl=\"1\"></Col>\n        </Row>\n    )\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../../style/HowToPlay.css';\n\nexport default function HowToPlay() {\n    return (\n        <Container fluid>\n            <Row>\n                <Col xl=\"1\"></Col>\n                <Col xl=\"10\">\n                    <div>\n                        <h1>How To Play Draughts</h1>\n                    </div>\n                    <div>\n                        <h2>Goal</h2>\n                        <p>The goal of the game of draughts is to take all of the opponent's pieces.</p>\n                    </div>\n                    <div>\n                        <h2>Summary</h2>\n                        <p>Draughts is a simple game with limited movement. There are two types of pieces in the game. Singles and kings, they can be differentiated with kings having a 'K' in the centre of the game piece. Singles can only move towards the opponents end of the board whereas kings can move both up and down the board. The game starts with only single pieces in play. Kings can be achieved by a player moving a piece to the far end of the board.</p>\n                        <p>Players take it in turn to move a single game piece. Pieces can only move in a diagonal direction by one square therefore not white square can be used. Only one piece can occupy a square. Players can take an opponents piece by jumping a character if the square diagonally behind the piece is available.</p>\n                    </div>\n                    <div>\n                        <h2>Rules</h2>\n                        <ul>\n                            <li>Player play the game in turns</li>\n                            <li>Players can only move one piece during a turn</li>\n                            <li>Kings are automatically created</li>\n                            <li>Piece can only move diagonally</li>\n                            <li>Singles only move towards to the opponent</li>\n                            <li>Kings can only move up and down</li>\n                            <li>Pieces can only take a character if the space diagonally behind it is free</li>\n                        </ul>\n                    </div>\n                    <div>\n                        <h2>How to play</h2>\n                        <p>A yellow ring will appear around the piece to identify whos turn it is in the players section.</p>\n                        <p>The pieces taken section will keep count of the pieces taken, once a player gets to 12 they lose.</p>\n                        <p>To move a piece click on the piece you want to move and the square you want to move it to. The game will do the rest and make you the move is valid.</p>\n                        <p>The game will automatically king piece.</p>\n                    </div>\n                </Col>\n                <Col xl=\"1\"></Col>\n            </Row>\n        </Container>\n    )\n}","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function ProjectCard(props) {\n    let list = props.features.map((feature, index) => {\n        return (<li key={index}>{feature}</li>)\n    })\n\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Header><h3>{props.title}</h3></Card.Header>\n                <Card.Text>\n                    <h5>Features</h5>\n                    <ul>\n                        {list}\n                    </ul>\n                </Card.Text>\n                <Alert variant={props.colour}>{props.status}</Alert>\n            </Card.Body>\n        </Card>\n    )\n}","import React from 'react';\nimport ProjectCard from '../shared/ProjectCard';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function About() {\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col xl=\"1\"></Col>\n                <Col xl=\"10\">\n                    <div>\n                        <h1>About</h1>\n                        <p>This game was made in loving memory of my grandad, Ernest Rumbol. My grandad taught me this game many years ago. Over the years we have played thousands of games together. As I got older and understood the game more, the more games I won. However, grandad still loved playing even when he wiped the board clean because he lost the game after the first move. We played with many different rule sets, his favourite was forcing users to take a piece if available, I thought the game was more tactical if you didn't. I hope that people play this game with as much fun as we did.</p>\n                    </div>\n                    <div>\n                        <h2>Technical information</h2>\n                        <p>Below lets the tools used to build this web application. You can find the source code at the <a href=\"https://github.com/OllieRumbol/draughtsgame\">Git Repo</a></p>\n                        <ul>\n                            <li><a href=\"https://reactjs.org/\">React with hooks</a></li>\n                            <li><a href=\"https://react-bootstrap.github.io/\">React bootstrap</a></li>\n                            <li><a href=\"https://reactrouter.com/web/guides/quick-start\">React router</a></li>\n                            <li><a href=\"https://pages.github.com/\">Git pages (for hosting)</a></li>\n                            <li><a href=\"https://testing-library.com/docs/react-testing-library/intro/\">React testing</a></li>\n                        </ul>\n                    </div>\n                    <div>\n                        <h2>Project Plan</h2>\n                        <div className=\"card-columns\">\n                            <ProjectCard title=\"Draughts Game Phase 1 Epic\" colour=\"success\" features={[\"React Project Setup\", \"Board setup\", \"Counter setup\", \"UI design\", \"Move counter\", \"Take counter\", \"Game end\", \"King me\", \"Turns\"]} status=\"Complete\"></ProjectCard>\n                            <ProjectCard title=\"React Router Epic\" colour=\"success\" features={[\"Setup\", \"Refactor\", \"Production changes\"]} status=\"Complete\"></ProjectCard>\n                            <ProjectCard title=\"Pages Epic\" colour=\"success\" features={[\"How to play\", \"About\"]} status=\"Complete\"></ProjectCard>\n                            <ProjectCard title=\"CI/CD and Unit Tests Epic\" colour=\"warning\" features={[\"Create basic pipeline in yaml\", \"Setup testing environment and add to pipeline\", \"Unit test components\", \"Unit test web app logic\"]} status=\"In progress\"></ProjectCard>\n                            <ProjectCard title=\"Player tips Epic\" colour=\"success\" features={[\"UI changes to display user tips\", \"Logic to work out where a player can move\", \"Logic to work out where a player can take another counter\"]} status=\"Complete\"></ProjectCard>\n                            <ProjectCard title=\"Automated 2nd Player Phase 1 Epic\" colour=\"danger\" features={[\"Game setup page, 2 player or VS PC. Along with other settings\", \"Web app logic for PC to decide next move (random logic)\", \"Render PC move on page\"]} status=\"Not started\"></ProjectCard>\n                            <ProjectCard title=\"Automated 2nd Player Phase 2 Epic\" colour=\"danger\" features={[\"Use some kind of genetic search algorithm to find best move\"]} status=\"Not started\"></ProjectCard>\n                            <ProjectCard title=\"Draughts Game Phase 2 Epic\" colour=\"warning\" features={[\"Double jumps\", \"Game over - no one can move\", \"Restart\", \"Undo\", \"CSS for selecting a counter\"]} status=\"In progress\"></ProjectCard>\n                            <ProjectCard title=\"Mobile responsive UI Epic\" colour=\"danger\" features={[\"Game setup page is mobile responsive\", \"Game board page is mobile responsive\", \"How to play page is mobile responsive\", \"About page is mobile responsive\"]} status=\"Not started\"></ProjectCard>\n                            <ProjectCard title=\"Support Epic\" colour=\"danger\" features={[\"Game tips results in no possible moves (26/01/21)\"]} status=\"Paused due to no further work\"></ProjectCard>\n                            <ProjectCard title=\"Technical Debt Epic Epic\" colour=\"danger\" features={[\"Refactor main use effect logic (28/01/21)\"]} status=\"Not started\"></ProjectCard>\n                        </div>\n                    </div>\n                    <br></br>\n                </Col>\n                <Col xl=\"1\"></Col>\n            </Row>\n        </Container>\n    )\n}","import React from 'react';\nimport Home from '../home/Home';\nimport HowToPlay from '../howToPlay/HowToPlay';\nimport About from '../about/About';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport '../../style/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {\n  return (\n    <Router>\n      <Container fluid>\n        <Jumbotron fluid>\n          <Container>\n            <h1 data-testid=\"title\" className=\"display-1 font-weight-bold\">Draughts Game</h1>\n            <h4>A draughts game built in react js</h4>\n            <hr className=\"my-4\"></hr>\n            <ButtonToolbar>\n              <Link to=\"/\">\n                <ButtonGroup className=\"mr-2\">\n                  <Button data-testid=\"link\" variant=\"primary\">Home</Button>\n                </ButtonGroup>\n              </Link>\n              <Link to=\"/howtoplay\">\n                <ButtonGroup className=\"mr-2\">\n                  <Button data-testid=\"link\" variant=\"primary\">How to play</Button>\n                </ButtonGroup>\n              </Link>\n              <Link to=\"/about\">\n                <ButtonGroup className=\"mr-2\">\n                  <Button data-testid=\"link\" variant=\"primary\">About</Button>\n                </ButtonGroup>\n              </Link>\n            </ButtonToolbar>\n          </Container>\n        </Jumbotron>\n        <main>\n          <Switch>\n            <Route path=\"/\" exact component={() => <Home />} />\n            <Route path=\"/howtoplay\" exact component={() => <HowToPlay />} />\n            <Route path=\"/about\" exact component={() => <About />} />\n          </Switch>\n        </main>\n      </Container>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/shared/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}