[{"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\index.js":"1","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\shared\\DisplayCard.js":"2","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\shared\\App.js":"3","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Home.js":"4","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Board.js":"5","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Pieces.js":"6","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Players.js":"7","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\PiecesTaken.js":"8","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\ResultModal.js":"9","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Square.js":"10","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Counter.js":"11","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\howToPlay\\HowToPlay.js":"12","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\about\\About.js":"13","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\shared\\ProjectCard.js":"14","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\playerTips.js":"15","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\hooks\\useOutsideAlerter.js":"16","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\JumpModal.js":"17","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\GameSettings.js":"18","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\store\\MyProvider.js":"19","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\PcBoard.js":"20","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\automatedPlayerV1.js":"21","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\automatedPlayerV2.js":"22","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\automatedPlayerV3.js":"23","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\InvalidMoveModal.js":"24","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\helpers\\tree.js":"25","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\helpers\\kingTree.js":"26","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\helpers\\checkMove.js":"27","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\helpers\\findMove.js":"28","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\api.js":"29","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\shared\\AlertBox.js":"30"},{"size":200,"mtime":1616260247742,"results":"31","hashOfConfig":"32"},{"size":384,"mtime":1618083032660,"results":"33","hashOfConfig":"32"},{"size":2842,"mtime":1618071361434,"results":"34","hashOfConfig":"32"},{"size":3438,"mtime":1618083687145,"results":"35","hashOfConfig":"32"},{"size":16806,"mtime":1618083417066,"results":"36","hashOfConfig":"32"},{"size":549,"mtime":1618083256155,"results":"37","hashOfConfig":"32"},{"size":643,"mtime":1618083196374,"results":"38","hashOfConfig":"32"},{"size":592,"mtime":1618083196374,"results":"39","hashOfConfig":"32"},{"size":868,"mtime":1618083170676,"results":"40","hashOfConfig":"32"},{"size":698,"mtime":1616260247738,"results":"41","hashOfConfig":"32"},{"size":1272,"mtime":1618083374520,"results":"42","hashOfConfig":"32"},{"size":3004,"mtime":1616260247739,"results":"43","hashOfConfig":"32"},{"size":7189,"mtime":1618071894360,"results":"44","hashOfConfig":"32"},{"size":704,"mtime":1616260247741,"results":"45","hashOfConfig":"32"},{"size":1678,"mtime":1616260247747,"results":"46","hashOfConfig":"32"},{"size":788,"mtime":1616260247741,"results":"47","hashOfConfig":"32"},{"size":1090,"mtime":1618083279544,"results":"48","hashOfConfig":"32"},{"size":5002,"mtime":1616260247733,"results":"49","hashOfConfig":"32"},{"size":1543,"mtime":1618000890810,"results":"50","hashOfConfig":"32"},{"size":16924,"mtime":1618049475969,"results":"51","hashOfConfig":"32"},{"size":559,"mtime":1616260247743,"results":"52","hashOfConfig":"32"},{"size":2622,"mtime":1616260247744,"results":"53","hashOfConfig":"32"},{"size":7237,"mtime":1616260247744,"results":"54","hashOfConfig":"32"},{"size":765,"mtime":1618083302561,"results":"55","hashOfConfig":"32"},{"size":874,"mtime":1616260247747,"results":"56","hashOfConfig":"32"},{"size":3817,"mtime":1616260247746,"results":"57","hashOfConfig":"32"},{"size":5203,"mtime":1616260247745,"results":"58","hashOfConfig":"32"},{"size":4194,"mtime":1616260247746,"results":"59","hashOfConfig":"32"},{"size":1267,"mtime":1618000890809,"results":"60","hashOfConfig":"32"},{"size":591,"mtime":1618000890808,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"3zuoj0",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\index.js",[],["125","126"],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\shared\\DisplayCard.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\shared\\App.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Home.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Board.js",["127"],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Pieces.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Players.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\PiecesTaken.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\ResultModal.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Square.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\Counter.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\howToPlay\\HowToPlay.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\about\\About.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\shared\\ProjectCard.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\playerTips.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\hooks\\useOutsideAlerter.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\JumpModal.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\GameSettings.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\store\\MyProvider.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\PcBoard.js",["128"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Square from './Square';\r\nimport JumpModal from './JumpModal';\r\nimport InvalidMoveModal from './InvalidMoveModal';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { findPlayerMoves } from '../../logic/playerTips';\r\nimport { MyContext } from '../../store/MyProvider';\r\nimport { GetAutomatedPlayerNextMove, GetPlayerTips } from '../../logic/api';\r\n\r\nexport default function PcBoard(props) {\r\n    //0 - Counter is never there\r\n    //1 - Player 1 Counter \r\n    //2 - Player 2 Counter\r\n    //3 - Player 1 King Counter\r\n    //4 - Player 2 King Counter\r\n    //5 - Playable space\r\n    //6 - Show player tip\r\n    const start = [\r\n        [0, 2, 0, 2, 0, 2, 0, 2],\r\n        [2, 0, 2, 0, 2, 0, 2, 0],\r\n        [0, 2, 0, 2, 0, 2, 0, 2],\r\n        [5, 0, 5, 0, 5, 0, 5, 0],\r\n        [0, 5, 0, 5, 0, 5, 0, 5],\r\n        [1, 0, 1, 0, 1, 0, 1, 0],\r\n        [0, 1, 0, 1, 0, 1, 0, 1],\r\n        [1, 0, 1, 0, 1, 0, 1, 0],\r\n    ];\r\n\r\n    const [counters, setCounters] = useState(start);\r\n    const [counterToMove, setCounterToMove] = useState(null);\r\n    const [squareToMoveTo, setSquareToMoveTo] = useState(null);\r\n    const [showTips, setShowTips] = useState(true);\r\n    const [squares, setSquares] = useState(renderSquares());\r\n    const [showJumpModal, setShowJumpModal] = useState(false);\r\n    const [JumpModalValue, setJumpModalValue] = useState(null);\r\n    const [listOfMoves, setListOfMoves] = useState([]);\r\n    const context = useContext(MyContext);\r\n    const [showInvalidMoveModal, setShowInvalidMoveModal] = useState(false);\r\n\r\n    let tipButtonText = showTips ? \"Show player tips\" : \"Hide player tips\";\r\n    let mode = context.difficulty === 1 ? \"Easy\" : context.difficulty === 2 ? \"Medium\" : \"Hard\"\r\n\r\n    function renderSquares() {\r\n        return counters.map((row, index) => {\r\n            let y = index;\r\n            return (\r\n                <tr key={y}>\r\n                    {\r\n                        row.map((piece, index) => <td key={y + index} className=\"p-0\"><Square state={piece} y={y} x={index} setSquareToMoveTo={setSquareToMoveTo} setCounterToMove={setCounterToMove}></Square></td>)\r\n                    }\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    function checkMoveCounter(value) {\r\n        if (counterToMove.height + value === squareToMoveTo.height) {\r\n            if (counterToMove.width - 1 === squareToMoveTo.width || counterToMove.width + 1 === squareToMoveTo.width) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function moveCounter() {\r\n        counters[counterToMove.height][counterToMove.width] = 5;\r\n        counters[squareToMoveTo.height][squareToMoveTo.width] = counterToMove.state;\r\n\r\n        kingMeCheck();\r\n        setSquares(renderSquares());\r\n        props.setTurn(false);\r\n    }\r\n\r\n    function checkTakeCounter(value, playerToTake) {\r\n        if (counterToMove.height + value === squareToMoveTo.height) {\r\n            if (counterToMove.width - 2 === squareToMoveTo.width || counterToMove.width + 2 === squareToMoveTo.width) {\r\n                let res = (squareToMoveTo.height + counterToMove.height) / 2;\r\n                let res2 = (squareToMoveTo.width + counterToMove.width) / 2\r\n                if (counters[res][res2] === playerToTake) {\r\n                    return {\r\n                        result: true,\r\n                        height: res,\r\n                        width: res2\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            result: false\r\n        }\r\n    }\r\n\r\n    function takeCounter(res, res2) {\r\n        counters[counterToMove.height][counterToMove.width] = 5;\r\n        counters[squareToMoveTo.height][squareToMoveTo.width] = counterToMove.state;\r\n\r\n        if (counters[res][res2] === 2 || counters[res][res2] === 4) {\r\n            props.setPlayer2Counter(props.player2Counter + 1);\r\n        }\r\n\r\n        counters[res][res2] = 5;\r\n\r\n        kingMeCheck();\r\n        setSquares(renderSquares());\r\n        props.setTurn(false);\r\n    }\r\n\r\n    function kingMeCheck() {\r\n        //Player 1 check\r\n        if (counterToMove.state === 1) {\r\n            if (squareToMoveTo.height === 0) {\r\n                counters[squareToMoveTo.height][squareToMoveTo.width] = 3;\r\n            }\r\n        }\r\n    }\r\n\r\n    function clearTips() {\r\n        for (let i = 0; i < counters.length; i++) {\r\n            for (let j = 0; j < counters[i].length; j++) {\r\n                if (counters[i][j] === 6) {\r\n                    counters[i][j] = 5;\r\n                }\r\n            }\r\n        }\r\n\r\n        setSquares(renderSquares());\r\n    }\r\n\r\n    function displayTips() {\r\n        if (props.turn === true) {\r\n            try {\r\n                GetPlayerTips(counters, 1).then(res => {\r\n                    res.forEach(element => {\r\n                        counters[element.height][element.width] = 6;\r\n                    });\r\n\r\n                    setSquares(renderSquares());\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                context.setErrorMessage(error);\r\n                context.setDisplayErrorMessage(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    function showPlayerTips() {\r\n        if (props.turn) {\r\n            if (showTips) {\r\n                displayTips();\r\n                setShowTips(false);\r\n            }\r\n            else {\r\n                clearTips();\r\n                setShowTips(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    function noOneCanMoveCheck() {\r\n        let result = false;\r\n        let player1Moves = findPlayerMoves(counters, 1);\r\n        let player2Moves = findPlayerMoves(counters, 2);\r\n\r\n        if (player1Moves.length === 0 && player2Moves.length === 0) {\r\n            props.setResultsModalTitle(\"Tied game\");\r\n            props.setResultsModalMessage(\"No player can move. Therefore the game ends in a tie. I hope you had fun playing.\");\r\n            props.setShowResultModal(true);\r\n            result = true;\r\n        } else if (player1Moves.length === 0) {\r\n            props.setResultsModalTitle(\"Player 2 wins\");\r\n            props.setResultsModalMessage(\"Player 1 can no longer move. Player 2 wins. I hope you had fun playing.\");\r\n            props.setShowResultModal(true);\r\n            result = true;\r\n        } else if (player2Moves.length === 0) {\r\n            props.setResultsModalTitle(\"Player 1 wins\");\r\n            props.setResultsModalMessage(\"Player 2 can no longer move. Player 1 wins. I hope you had fun playing.\");\r\n            props.setShowResultModal(true);\r\n            result = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function checkToJumpUpAgain(value) {\r\n        try {\r\n            //left\r\n            if (counters[squareToMoveTo.height - 1][squareToMoveTo.width - 1] === value) {\r\n                if (counters[squareToMoveTo.height - 2][squareToMoveTo.width - 2] === 5 || counters[squareToMoveTo.height - 2][squareToMoveTo.width - 2] === 6) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            //Right\r\n            if (counters[squareToMoveTo.height - 1][squareToMoveTo.width + 1] === value) {\r\n                if (counters[squareToMoveTo.height - 2][squareToMoveTo.width + 2] === 5 || counters[squareToMoveTo.height - 2][squareToMoveTo.width + 2] === 6) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function checkToJumpDownAgain(value) {\r\n        try {\r\n            //left\r\n            if (counters[squareToMoveTo.height + 1][squareToMoveTo.width - 1] === value) {\r\n                if (counters[squareToMoveTo.height + 2][squareToMoveTo.width - 2] === 5 || counters[squareToMoveTo.height + 2][squareToMoveTo.width - 2] === 6) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            //Right\r\n            if (counters[squareToMoveTo.height + 1][squareToMoveTo.width + 1] === value) {\r\n                if (counters[squareToMoveTo.height + 2][squareToMoveTo.width + 2] === 5 || counters[squareToMoveTo.height + 2][squareToMoveTo.width + 2] === 6) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function undo() {\r\n        if (listOfMoves.length !== 0) {\r\n            if (showTips === false) {\r\n                setShowTips(true);\r\n            }\r\n\r\n            let temp = listOfMoves[listOfMoves.length - 1];\r\n            for (let i = 0; i < counters.length; i++) {\r\n                for (let j = 0; j < counters[i].length; j++) {\r\n                    if (temp.board[i][j] === 6) {\r\n                        counters[i][j] = 5;\r\n                    }\r\n                    else if (counters[i][j] !== temp.board[i][j]) {\r\n                        counters[i][j] = temp.board[i][j];\r\n                    }\r\n                }\r\n            }\r\n\r\n            props.setTurn(temp.turn);\r\n\r\n            listOfMoves.pop();\r\n\r\n            let piecesTakenPlayer1 = 12 - calculatePiecesTaken(1);\r\n            props.setPlayer1Counter(piecesTakenPlayer1);\r\n            let piecesTakenPlayer2 = 12 - calculatePiecesTaken(2);\r\n            props.setPlayer2Counter(piecesTakenPlayer2);\r\n\r\n            setSquares(renderSquares());\r\n        }\r\n    }\r\n\r\n    function saveBoard() {\r\n        let copyBoard = [];\r\n        for (let i = 0; i < counters.length; i++) {\r\n            copyBoard[i] = counters[i].slice();\r\n        }\r\n        setListOfMoves(moves => [...moves, {\r\n            turn: props.turn,\r\n            board: copyBoard\r\n        }]);\r\n    }\r\n\r\n    function calculatePiecesTaken(player) {\r\n        let counter = 0;\r\n        for (let i = 0; i < counters.length; i++) {\r\n            for (let j = 0; j < counters[i].length; j++) {\r\n                if (counters[i][j] === player || counters[i][j] === player + 2) {\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return counter\r\n    }\r\n\r\n    function player2Go() {\r\n        setTimeout(() => {\r\n            let version = context.difficulty;\r\n            let depth = context.difficulty === 1 ? 0 : 5;\r\n            try {\r\n                GetAutomatedPlayerNextMove(version, counters, depth).then(res => {\r\n                    if (res.takes !== []) {\r\n                        res.takes.forEach(element => {\r\n                            counters[element.height][element.width] = 5;\r\n                        });\r\n                        props.setPlayer1Counter(props.player1Counter + res.takes.length);\r\n                    }\r\n\r\n                    let tempValue = counters[res.currentHeight][res.currentWidth];\r\n                    counters[res.currentHeight][res.currentWidth] = 5;\r\n                    counters[res.nextHeight][res.nextWidth] = tempValue;\r\n\r\n                    if (res.nextHeight === 7) {\r\n                        counters[res.nextHeight][res.nextWidth] = 4;\r\n                    }\r\n\r\n                    setSquares(renderSquares());\r\n                    props.setTurn(true);\r\n                    noOneCanMoveCheck();\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                context.setErrorMessage();\r\n                context.setDisplayErrorMessage(true);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    function giveUp() {\r\n        if (props.turn === true) {\r\n            props.setResultsModalTitle(\"Player 2 wins\");\r\n            props.setResultsModalMessage(\"Player 1 has given up on the game.\");\r\n            props.setShowResultModal(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let player2ToGoNext = true;\r\n        let validMove = false;\r\n        //Player1 \r\n        if (props.turn) {\r\n            if (counterToMove != null && squareToMoveTo != null) {\r\n                if (counterToMove.state === 1) {\r\n                    let canTake = checkTakeCounter(-2, 2);\r\n                    if (canTake.result) {\r\n                        saveBoard();\r\n                        takeCounter(canTake.height, canTake.width);\r\n                        validMove = true;\r\n                        if (checkToJumpUpAgain(2)) {\r\n                            player2ToGoNext = false;\r\n                            setShowJumpModal(true);\r\n                        }\r\n                    }\r\n                    else if (checkMoveCounter(-1)) {\r\n                        saveBoard();\r\n                        moveCounter();\r\n                        validMove = true;\r\n                    }\r\n                }\r\n                else if (counterToMove.state === 3) {\r\n                    if (counterToMove.height - 1 === squareToMoveTo.height || counterToMove.height + 1 === squareToMoveTo.height) {\r\n                        if (counterToMove.width - 1 === squareToMoveTo.width || counterToMove.width + 1 === squareToMoveTo.width) {\r\n                            saveBoard();\r\n                            moveCounter();\r\n                            validMove = true;\r\n                        }\r\n                    }\r\n                    else if (counterToMove.height - 2 === squareToMoveTo.height || counterToMove.height + 2 === squareToMoveTo.height) {\r\n                        if (counterToMove.width - 2 === squareToMoveTo.width || counterToMove.width + 2 === squareToMoveTo.width) {\r\n                            let res = (squareToMoveTo.height + counterToMove.height) / 2;\r\n                            let res2 = (squareToMoveTo.width + counterToMove.width) / 2;\r\n                            //Player 1 king takes player 2\r\n                            if (counters[res][res2] === 2 || counters[res][res2] === 4) {\r\n                                saveBoard();\r\n                                takeCounter(res, res2);\r\n                                validMove = true;\r\n                                if (checkToJumpUpAgain(2) || checkToJumpUpAgain(4) || checkToJumpDownAgain(2) || checkToJumpDownAgain(4)) {\r\n                                    player2ToGoNext = false;\r\n                                    setShowJumpModal(true);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                clearTips();\r\n                setShowTips(true);\r\n                setCounterToMove(null);\r\n                setSquareToMoveTo(null);\r\n\r\n                let result = noOneCanMoveCheck();\r\n                if (result) {\r\n                    player2ToGoNext = false;\r\n                }\r\n\r\n                if (player2ToGoNext && validMove) {\r\n                    player2Go();\r\n                }\r\n                else if (validMove === false) {\r\n                    setShowInvalidMoveModal(true);\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [squareToMoveTo, counterToMove, counters])\r\n\r\n    useEffect(() => {\r\n        if (JumpModalValue) {\r\n            props.setTurn(true);\r\n            setJumpModalValue(null);\r\n        }\r\n        else if (JumpModalValue === false) {\r\n            player2Go();\r\n            setJumpModalValue(null);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [JumpModalValue, props])\r\n\r\n    if (context.whoGoesFirst === false) {\r\n        player2Go();\r\n        context.setWhoGoesFirst(null);\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <div className=\"d-flex justify-content-center mb-3\">\r\n                <h2>PC Mode: {mode}</h2>\r\n            </div>\r\n\r\n            <ButtonToolbar className=\"d-flex justify-content-center mb-2\">\r\n                <ButtonGroup className=\"ml-2 mr-2 mb-4\">\r\n                    <Button onClick={showPlayerTips} size=\"lg\">{tipButtonText}</Button>\r\n                </ButtonGroup>\r\n                <ButtonGroup className=\"ml-2 mr-2 mb-4\">\r\n                    <Button onClick={undo} size=\"lg\">Undo</Button>\r\n                </ButtonGroup>\r\n                <ButtonGroup className=\"ml-2 mr-2 mb-4\">\r\n                    <Button onClick={giveUp} variant=\"danger\" size=\"lg\">Give up</Button>\r\n                </ButtonGroup>\r\n            </ButtonToolbar>\r\n\r\n            <JumpModal show={showJumpModal} update={setShowJumpModal} setJumpModalValue={setJumpModalValue} />\r\n            <InvalidMoveModal show={showInvalidMoveModal} update={setShowInvalidMoveModal} />\r\n\r\n            <div className=\"d-flex justify-content-center\">\r\n                <table className=\"gameBorder\">\r\n                    <tbody className=\"border border-dark\">\r\n                        {squares}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\automatedPlayerV1.js",[],["129","130"],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\automatedPlayerV2.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\automatedPlayerV3.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\home\\InvalidMoveModal.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\helpers\\tree.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\helpers\\kingTree.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\helpers\\checkMove.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\helpers\\findMove.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\logic\\api.js",[],"C:\\Users\\otgbo\\Documents\\Repo\\draughtsgame\\src\\components\\shared\\AlertBox.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":32,"column":22,"nodeType":"137","messageId":"138","endLine":32,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":32,"column":22,"nodeType":"137","messageId":"138","endLine":32,"endColumn":33},{"ruleId":"131","replacedBy":"139"},{"ruleId":"133","replacedBy":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'setCounters' is assigned a value but never used.","Identifier","unusedVar",["141"],["142"],"no-global-assign","no-unsafe-negation"]